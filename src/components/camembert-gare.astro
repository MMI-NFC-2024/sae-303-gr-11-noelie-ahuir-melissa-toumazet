---
---

<style>
  #camembert-gares {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin: 2rem auto;
  }

  h2 {
    text-align: center;
    font-size: 1.6rem;
    margin-bottom: 1rem;
    color: #54278f;
  }

  svg {
    display: block;
    margin: auto;
  }

  .tooltip {
    position: absolute;
    background: rgba(255, 255, 255, 0.95);
    border: 1px solid #ccc;
    border-radius: 6px;
    padding: 6px 10px;
    font-size: 14px;
    color: #333;
    pointer-events: none;
    visibility: hidden;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);
    transition: all 0.15s ease-in-out;
  }
</style>

<div id="camembert-gares">
  <h2>Répartition des gares ouvertes et fermées</h2>
  <div style="position: relative;">
    <svg id="camembert" width="380" height="420"></svg>
    <div class="tooltip" id="tooltip"></div>
  </div>
</div>

<script type="module">
  import * as d3 from "https://cdn.jsdelivr.net/npm/d3@7/+esm";

  async function initCamembert() {
    const data = await fetch("/dataSunburst.json").then(r => r.json());
    console.log("✅ Données camembert :", data);

    const svg = d3.select("#camembert");
    const tooltip = d3.select("#tooltip");

    const width = +svg.attr("width");
    const height = +svg.attr("height");
    const radius = Math.min(width, height) / 2.2;

    const g = svg
      .append("g")
      .attr("transform", `translate(${width / 2}, ${height / 2.2})`);

    const color = d3
      .scaleOrdinal()
      .domain(["Ouverte", "Fermée"])
      .range(["#54278f", "#8fe9ff"]);

    // ✅ Donut : innerRadius > 0
    const pie = d3.pie().value(d => d.size).sort(null);
    const arc = d3
      .arc()
      .innerRadius(radius * 0.55)
      .outerRadius(radius);

    const arcs = g
      .selectAll(".arc")
      .data(pie(data.children))
      .join("path")
      .attr("class", "arc")
      .attr("fill", d => color(d.data.name))
      .attr("d", arc)
      .style("cursor", "pointer")
      .on("mouseenter", (event, d) => {
        tooltip
          .style("visibility", "visible")
          .html(`<strong>${d.data.name}</strong><br>${d.data.size} gares`);
        d3.select(event.currentTarget).attr("stroke", "#000").attr("stroke-width", 2);
      })
      .on("mousemove", event => {
        tooltip
          .style("top", event.offsetY + 10 + "px")
          .style("left", event.offsetX + 10 + "px");
      })
      .on("mouseleave", event => {
        tooltip.style("visibility", "hidden");
        d3.select(event.currentTarget).attr("stroke", "none");
      });

    // ✅ Texte central (proportion + phrase)
    const total = data.children.reduce((a, b) => a + b.size, 0);
    const ouvertes = data.children.find(d => d.name === "Ouverte").size;
    const pct = ((ouvertes / total) * 100).toFixed(1);

    g.append("text")
      .attr("text-anchor", "middle")
      .attr("y", -10)
      .style("font-size", "2.6em")
      .style("font-weight", "700")
      .text(`${pct}%`);

    g.append("text")
      .attr("text-anchor", "middle")
      .attr("y", 25)
      .style("font-size", "1em")
      .text("des gares en France");

    // ✅ Légende déplacée plus bas
    const legendY = height - 40 ; // ⬅️ ancienne valeur : height - 25
    const legend = svg
      .append("g")
      .attr("transform", `translate(${width / 2 - 100}, ${legendY})`);

    legend
      .append("rect")
      .attr("x", 0)
      .attr("width", 14)
      .attr("height", 14)
      .attr("fill", "#54278f");

    legend
      .append("text")
      .attr("x", 20)
      .attr("y", 12)
      .text("Ouvertes")
      .style("font-size", "13px")
      .style("font-weight", "500");

    legend
      .append("rect")
      .attr("x", 90)
      .attr("width", 14)
      .attr("height", 14)
      .attr("fill", "#8fe9ff");

    legend
      .append("text")
      .attr("x", 110)
      .attr("y", 12)
      .text("Fermées")
      .style("font-size", "13px")
      .style("font-weight", "500");
  }

  initCamembert();
</script>
