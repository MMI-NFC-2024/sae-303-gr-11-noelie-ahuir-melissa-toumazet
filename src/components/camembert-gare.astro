---
---
<div id="camembert-gares" class="flex flex-col items-center my-8">
  <h4 class="text-center text-[#54278f] text-xl md:text-2xl font-semibold mb-4">
    Répartition des gares ouvertes et fermées
  </h4>

  <div class="relative flex flex-col items-center w-full">
    <!-- SVG responsive -->
    <svg
      id="camembert"
      class="block mx-auto w-[300px] sm:w-[350px] md:w-[380px] h-auto"
      viewBox="0 0 380 420"
      preserveAspectRatio="xMidYMid meet"
    ></svg>

    <!-- Tooltip -->
    <div
      id="tooltip"
      class="absolute bg-white/95 border border-gray-300 rounded-lg px-3 py-2 text-sm text-gray-800 shadow-md invisible pointer-events-none transition-all duration-150"
    ></div>

    <!-- Légende centrée -->
    <div
      id="legend"
      class="flex justify-center items-center space-x-6 mt-4 text-sm font-medium text-gray-700"
    >
      <div class="flex items-center space-x-2">
        <div class="w-4 h-4 bg-[#54278f] rounded"></div>
        <span>Ouvertes</span>
      </div>
      <div class="flex items-center space-x-2">
        <div class="w-4 h-4 bg-[#8fe9ff] rounded"></div>
        <span>Fermées</span>
      </div>
    </div>
  </div>
</div>

<script type="module">
  import * as d3 from "https://cdn.jsdelivr.net/npm/d3@7/+esm";

  async function initCamembert() {
    const data = await fetch("/dataSunburst.json").then((r) => r.json());
    console.log("✅ Données camembert :", data);

    const svg = d3.select("#camembert");
    const tooltip = d3.select("#tooltip");

    const width = 380;
    const height = 420;
    const radius = Math.min(width, height) / 2.2;

    const g = svg
      .append("g")
      .attr("transform", `translate(${width / 2}, ${height / 2.2})`);

    const color = d3
      .scaleOrdinal()
      .domain(["Ouverte", "Fermée"])
      .range(["#54278f", "#8fe9ff"]);

    const pie = d3.pie().value((d) => d.size).sort(null);
    const arc = d3.arc().innerRadius(radius * 0.55).outerRadius(radius);

    const arcs = g
      .selectAll(".arc")
      .data(pie(data.children))
      .join("path")
      .attr("class", "arc cursor-pointer transition-all duration-200")
      .attr("fill", (d) => color(d.data.name))
      .attr("d", arc)
      .on("mouseenter", (event, d) => {
        tooltip
          .style("visibility", "visible")
          .classed("visible", true)
          .html(`<strong>${d.data.name}</strong><br>${d.data.size} gares`);
        d3.select(event.currentTarget)
          .attr("stroke", "#000")
          .attr("stroke-width", 2);
      })
      .on("mousemove", (event) => {
        tooltip
          .style("top", event.offsetY + 10 + "px")
          .style("left", event.offsetX + 10 + "px");
      })
      .on("mouseleave", (event) => {
        tooltip.style("visibility", "hidden").classed("invisible", true);
        d3.select(event.currentTarget).attr("stroke", "none");
      });

    // ✅ Texte central
    const total = data.children.reduce((a, b) => a + b.size, 0);
    const ouvertes = data.children.find((d) => d.name === "Ouverte").size;
    const pct = ((ouvertes / total) * 100).toFixed(1);

    g.append("text")
      .attr("text-anchor", "middle")
      .attr("y", -10)
      .attr("class", "text-3xl sm:text-4xl font-bold fill-gray-900")
      .text(`${pct}%`);

    g.append("text")
      .attr("text-anchor", "middle")
      .attr("y", 25)
      .attr("class", "text-xs sm:text-sm fill-gray-700")
      .text("des gares en France");
  }

  initCamembert();

  // ✅ Redimensionnement dynamique
  window.addEventListener("resize", () => {
    const svg = document.getElementById("camembert");
    if (window.innerWidth < 640) {
      svg.setAttribute("viewBox", "0 0 320 360");
    } else if (window.innerWidth < 1024) {
      svg.setAttribute("viewBox", "0 0 360 400");
    } else {
      svg.setAttribute("viewBox", "0 0 380 420");
    }
  });
</script>
