<div id="plot-container" class="flex flex-col items-center justify-center relative">
  <select
    id="select-couche"
    class="mb-4 py-2 px-4 rounded-md border border-[#9d99c7] bg-[#f9f8ff] text-base"
  >
    <option value="Toutes">Toutes</option>
    <option value="Gares">Gares</option>
    <option value="Tourisme">Tourisme</option>
  </select>

  <div id="map-plot" class="w-full max-w-5xl h-[800px] md:h-[600px]"></div>

  <div class="legende bg-white/90 border border-[#d0d0d0] rounded-md p-4 text-sm text-[#333] flex flex-col md:flex-row gap-3 items-center">
    <div class="legende-item flex items-center gap-2">
      <span class="dot gares w-3 h-3 rounded-full bg-[#8fe9ff]"></span>
      <span>Gares</span>
    </div>
    <div class="legende-item flex items-center gap-2">
    <span class="dot tourisme w-3 h-3 rounded-full bg-[#54278f]"></span>
      <span>Tourisme</span>
    </div>
  </div>
</div>

<script type="module">
  import * as d3 from "https://cdn.jsdelivr.net/npm/d3@7/+esm";
  import * as Plot from "https://cdn.jsdelivr.net/npm/@observablehq/plot@0.6/+esm";

  async function initCarte() {
    const [departements, garesValides, tourismesMetropole] = await Promise.all([
      fetch("/departements.geojson").then(r => r.json()),
      fetch("/garesValides.json").then(r => r.json()),
      fetch("/tourismesMetropole.json").then(r => r.json())
    ]);

    console.log("âœ… Fichiers chargÃ©s :", {
      departements: departements.features?.length ?? "inconnu",
      gares: garesValides.length,
      tourisme: tourismesMetropole.length
    });

    const container = document.getElementById("map-plot");
    const select = document.getElementById("select-couche");

    function renderCarte(couche) {
      container.innerHTML = "";

      const chart = Plot.plot({
        width: 1000,
        height: 800,
        projection: {
          type: "mercator",
          domain: departements
        },
        marks: [
          Plot.geo(departements, {
            fill: "#f2f0f7",
            stroke: "#9d99c7"
          }),

          ...((couche === "Toutes" || couche === "Gares")
            ? [
                Plot.dot(garesValides, {
                  x: d => d.position_geographique.lon,
                  y: d => d.position_geographique.lat,
                  r: 3,
                  fill: "#8fe9ff",
                  opacity: 1,
                  title: d => `Gare : ${d.nom}`,
                  tip: true
                })
              ]
            : []),

          ...((couche === "Toutes" || couche === "Tourisme")
            ? [
                Plot.dot(tourismesMetropole, {
                  x: d => d.Longitude,
                  y: d => d.Latitude,
                  r: 1.3,
                  fill: "#54278f",
                  opacity: 0.4,
                  title: d => `Lieu touristique : ${d.Nom ?? "Inconnu"}`,
                  tip: true
                })
              ]
            : [])
        ]
      });

      container.append(chart);
    }

    renderCarte("Toutes");

    select.addEventListener("change", e => renderCarte(e.target.value));
  }

  initCarte();
</script>